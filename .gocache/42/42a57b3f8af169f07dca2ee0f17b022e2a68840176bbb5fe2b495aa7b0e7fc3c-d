//go:cgo_ldflag "-O2"
//go:cgo_ldflag "-g"
//go:cgo_ldflag "-framework"
//go:cgo_ldflag "CoreGraphics"
//go:cgo_ldflag "-framework"
//go:cgo_ldflag "ApplicationServices"
//go:cgo_ldflag "-framework"
//go:cgo_ldflag "Cocoa"
// Code generated by cmd/cgo; DO NOT EDIT.

package events

import "unsafe"

import "syscall"

import _cgopackage "runtime/cgo"

type _ _cgopackage.Incomplete
var _ syscall.Errno
func _Cgo_ptr(ptr unsafe.Pointer) unsafe.Pointer { return ptr }

//go:linkname _Cgo_always_false runtime.cgoAlwaysFalse
var _Cgo_always_false bool
//go:linkname _Cgo_use runtime.cgoUse
func _Cgo_use(interface{})
//go:linkname _Cgo_keepalive runtime.cgoKeepAlive
//go:noescape
func _Cgo_keepalive(interface{})
//go:linkname _Cgo_no_callback runtime.cgoNoCallback
func _Cgo_no_callback(bool)
type _Ctype_Boolean = _Ctype_uchar

type _Ctype_CFIndex = _Ctype_long

type _Ctype_CFMachPortRef uintptr

type _Ctype_CFRunLoopRef uintptr

type _Ctype_CFRunLoopSourceRef uintptr

type _Ctype_CFStringEncoding = _Ctype_UInt32

type _Ctype_CFStringRef uintptr

type _Ctype_CFTypeID = _Ctype_ulong

type _Ctype_CFTypeRef uintptr

type _Ctype_CGEventMask = _Ctype_uint64_t

type _Ctype_CGEventRef uintptr

type _Ctype_CGEventTapProxy *_Ctype_struct___CGEventTapProxy

type _Ctype_CGEventType uint32

type _Ctype_UInt32 = _Ctype_uint

type _Ctype__GoString_ string

type _Ctype_char int8

type _Ctype_double float64

type _Ctype_int64_t = _Ctype_longlong

type _Ctype_intgo = _Ctype_ptrdiff_t

type _Ctype_long int64

type _Ctype_longlong int64

type _Ctype_ptrdiff_t = _Ctype_long

type _Ctype_struct___CFMachPort _cgopackage.Incomplete

type _Ctype_struct___CFRunLoop _cgopackage.Incomplete

type _Ctype_struct___CFRunLoopSource _cgopackage.Incomplete

type _Ctype_struct___CFString _cgopackage.Incomplete

type _Ctype_struct___CGEvent _cgopackage.Incomplete

type _Ctype_struct___CGEventTapProxy _cgopackage.Incomplete

type _Ctype_uchar uint8

type _Ctype_uint uint32

type _Ctype_uint32_t = _Ctype_uint

type _Ctype_uint64_t = _Ctype_ulonglong

type _Ctype_uintptr_t = _Ctype_ulong

type _Ctype_ulong uint64

type _Ctype_ulonglong uint64

type _Ctype_void [0]byte

//go:linkname _cgo_runtime_cgocall runtime.cgocall
func _cgo_runtime_cgocall(unsafe.Pointer, uintptr) int32

//go:linkname _cgoCheckPointer runtime.cgoCheckPointer
//go:noescape
func _cgoCheckPointer(interface{}, interface{})

//go:linkname _cgoCheckResult runtime.cgoCheckResult
//go:noescape
func _cgoCheckResult(interface{})
const _Ciconst_kCFStringEncodingUTF8 = 0x8000100
const _Ciconst_kCGEventFlagsChanged = 0xc
const _Ciconst_kCGEventKeyDown = 0xa
const _Ciconst_kCGEventKeyUp = 0xb
const _Ciconst_kCGEventLeftMouseDown = 0x1
const _Ciconst_kCGEventLeftMouseUp = 0x2
const _Ciconst_kCGEventMouseMoved = 0x5
const _Ciconst_kCGEventOtherMouseDown = 0x19
const _Ciconst_kCGEventOtherMouseUp = 0x1a
const _Ciconst_kCGEventRightMouseDown = 0x3
const _Ciconst_kCGEventRightMouseUp = 0x4
const _Ciconst_kCGEventScrollWheel = 0x16

//go:cgo_import_static _cgo_7047ef8e0352_Cfunc_CFRelease
//go:linkname __cgofn__cgo_7047ef8e0352_Cfunc_CFRelease _cgo_7047ef8e0352_Cfunc_CFRelease
var __cgofn__cgo_7047ef8e0352_Cfunc_CFRelease byte
var _cgo_7047ef8e0352_Cfunc_CFRelease = unsafe.Pointer(&__cgofn__cgo_7047ef8e0352_Cfunc_CFRelease)

//go:cgo_unsafe_args
func _Cfunc_CFRelease(p0 _Ctype_CFTypeRef) (r1 _Ctype_void) {
	_cgo_runtime_cgocall(_cgo_7047ef8e0352_Cfunc_CFRelease, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
	}
	return
}
//go:cgo_import_static _cgo_7047ef8e0352_Cfunc_CFStringGetCString
//go:linkname __cgofn__cgo_7047ef8e0352_Cfunc_CFStringGetCString _cgo_7047ef8e0352_Cfunc_CFStringGetCString
var __cgofn__cgo_7047ef8e0352_Cfunc_CFStringGetCString byte
var _cgo_7047ef8e0352_Cfunc_CFStringGetCString = unsafe.Pointer(&__cgofn__cgo_7047ef8e0352_Cfunc_CFStringGetCString)

//go:cgo_unsafe_args
func _Cfunc_CFStringGetCString(p0 _Ctype_CFStringRef, p1 *_Ctype_char, p2 _Ctype_CFIndex, p3 _Ctype_CFStringEncoding) (r1 _Ctype_Boolean) {
	_cgo_runtime_cgocall(_cgo_7047ef8e0352_Cfunc_CFStringGetCString, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
		_Cgo_use(p3)
	}
	return
}
//go:cgo_import_static _cgo_7047ef8e0352_Cfunc_CFStringGetLength
//go:linkname __cgofn__cgo_7047ef8e0352_Cfunc_CFStringGetLength _cgo_7047ef8e0352_Cfunc_CFStringGetLength
var __cgofn__cgo_7047ef8e0352_Cfunc_CFStringGetLength byte
var _cgo_7047ef8e0352_Cfunc_CFStringGetLength = unsafe.Pointer(&__cgofn__cgo_7047ef8e0352_Cfunc_CFStringGetLength)

//go:cgo_unsafe_args
func _Cfunc_CFStringGetLength(p0 _Ctype_CFStringRef) (r1 _Ctype_CFIndex) {
	_cgo_runtime_cgocall(_cgo_7047ef8e0352_Cfunc_CFStringGetLength, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
	}
	return
}

//go:linkname _cgo_runtime_gostring runtime.gostring
func _cgo_runtime_gostring(*_Ctype_char) string

// GoString converts the C string p into a Go string.
func _Cfunc_GoString(p *_Ctype_char) string {
	return _cgo_runtime_gostring(p)
}
//go:cgo_import_static _cgo_7047ef8e0352_Cfunc_addSourceToRunLoop
//go:linkname __cgofn__cgo_7047ef8e0352_Cfunc_addSourceToRunLoop _cgo_7047ef8e0352_Cfunc_addSourceToRunLoop
var __cgofn__cgo_7047ef8e0352_Cfunc_addSourceToRunLoop byte
var _cgo_7047ef8e0352_Cfunc_addSourceToRunLoop = unsafe.Pointer(&__cgofn__cgo_7047ef8e0352_Cfunc_addSourceToRunLoop)

//go:cgo_unsafe_args
func _Cfunc_addSourceToRunLoop(p0 _Ctype_CFRunLoopRef, p1 _Ctype_CFRunLoopSourceRef) (r1 _Ctype_void) {
	_cgo_runtime_cgocall(_cgo_7047ef8e0352_Cfunc_addSourceToRunLoop, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
	}
	return
}
//go:cgo_import_static _cgo_7047ef8e0352_Cfunc_axCheckTrusted
//go:linkname __cgofn__cgo_7047ef8e0352_Cfunc_axCheckTrusted _cgo_7047ef8e0352_Cfunc_axCheckTrusted
var __cgofn__cgo_7047ef8e0352_Cfunc_axCheckTrusted byte
var _cgo_7047ef8e0352_Cfunc_axCheckTrusted = unsafe.Pointer(&__cgofn__cgo_7047ef8e0352_Cfunc_axCheckTrusted)

//go:cgo_unsafe_args
func _Cfunc_axCheckTrusted() (r1 _Ctype_Boolean) {
	_cgo_runtime_cgocall(_cgo_7047ef8e0352_Cfunc_axCheckTrusted, uintptr(unsafe.Pointer(&r1)))
	if _Cgo_always_false {
	}
	return
}
//go:cgo_import_static _cgo_7047ef8e0352_Cfunc_cgEventGetKeycode
//go:linkname __cgofn__cgo_7047ef8e0352_Cfunc_cgEventGetKeycode _cgo_7047ef8e0352_Cfunc_cgEventGetKeycode
var __cgofn__cgo_7047ef8e0352_Cfunc_cgEventGetKeycode byte
var _cgo_7047ef8e0352_Cfunc_cgEventGetKeycode = unsafe.Pointer(&__cgofn__cgo_7047ef8e0352_Cfunc_cgEventGetKeycode)

//go:cgo_unsafe_args
func _Cfunc_cgEventGetKeycode(p0 _Ctype_CGEventRef) (r1 _Ctype_int64_t) {
	_cgo_runtime_cgocall(_cgo_7047ef8e0352_Cfunc_cgEventGetKeycode, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
	}
	return
}
//go:cgo_import_static _cgo_7047ef8e0352_Cfunc_cgEventGetX
//go:linkname __cgofn__cgo_7047ef8e0352_Cfunc_cgEventGetX _cgo_7047ef8e0352_Cfunc_cgEventGetX
var __cgofn__cgo_7047ef8e0352_Cfunc_cgEventGetX byte
var _cgo_7047ef8e0352_Cfunc_cgEventGetX = unsafe.Pointer(&__cgofn__cgo_7047ef8e0352_Cfunc_cgEventGetX)

//go:cgo_unsafe_args
func _Cfunc_cgEventGetX(p0 _Ctype_CGEventRef) (r1 _Ctype_double) {
	_cgo_runtime_cgocall(_cgo_7047ef8e0352_Cfunc_cgEventGetX, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
	}
	return
}
//go:cgo_import_static _cgo_7047ef8e0352_Cfunc_cgEventGetY
//go:linkname __cgofn__cgo_7047ef8e0352_Cfunc_cgEventGetY _cgo_7047ef8e0352_Cfunc_cgEventGetY
var __cgofn__cgo_7047ef8e0352_Cfunc_cgEventGetY byte
var _cgo_7047ef8e0352_Cfunc_cgEventGetY = unsafe.Pointer(&__cgofn__cgo_7047ef8e0352_Cfunc_cgEventGetY)

//go:cgo_unsafe_args
func _Cfunc_cgEventGetY(p0 _Ctype_CGEventRef) (r1 _Ctype_double) {
	_cgo_runtime_cgocall(_cgo_7047ef8e0352_Cfunc_cgEventGetY, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
	}
	return
}
//go:cgo_import_static _cgo_7047ef8e0352_Cfunc_cgEventMaskBit
//go:linkname __cgofn__cgo_7047ef8e0352_Cfunc_cgEventMaskBit _cgo_7047ef8e0352_Cfunc_cgEventMaskBit
var __cgofn__cgo_7047ef8e0352_Cfunc_cgEventMaskBit byte
var _cgo_7047ef8e0352_Cfunc_cgEventMaskBit = unsafe.Pointer(&__cgofn__cgo_7047ef8e0352_Cfunc_cgEventMaskBit)

//go:cgo_unsafe_args
func _Cfunc_cgEventMaskBit(p0 _Ctype_CGEventType) (r1 _Ctype_CGEventMask) {
	_cgo_runtime_cgocall(_cgo_7047ef8e0352_Cfunc_cgEventMaskBit, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
	}
	return
}
//go:cgo_import_static _cgo_7047ef8e0352_Cfunc_copyFocusedAppBundle
//go:linkname __cgofn__cgo_7047ef8e0352_Cfunc_copyFocusedAppBundle _cgo_7047ef8e0352_Cfunc_copyFocusedAppBundle
var __cgofn__cgo_7047ef8e0352_Cfunc_copyFocusedAppBundle byte
var _cgo_7047ef8e0352_Cfunc_copyFocusedAppBundle = unsafe.Pointer(&__cgofn__cgo_7047ef8e0352_Cfunc_copyFocusedAppBundle)

//go:cgo_unsafe_args
func _Cfunc_copyFocusedAppBundle() (r1 _Ctype_CFStringRef) {
	_cgo_runtime_cgocall(_cgo_7047ef8e0352_Cfunc_copyFocusedAppBundle, uintptr(unsafe.Pointer(&r1)))
	if _Cgo_always_false {
	}
	return
}
//go:cgo_import_static _cgo_7047ef8e0352_Cfunc_copyFocusedAppName
//go:linkname __cgofn__cgo_7047ef8e0352_Cfunc_copyFocusedAppName _cgo_7047ef8e0352_Cfunc_copyFocusedAppName
var __cgofn__cgo_7047ef8e0352_Cfunc_copyFocusedAppName byte
var _cgo_7047ef8e0352_Cfunc_copyFocusedAppName = unsafe.Pointer(&__cgofn__cgo_7047ef8e0352_Cfunc_copyFocusedAppName)

//go:cgo_unsafe_args
func _Cfunc_copyFocusedAppName() (r1 _Ctype_CFStringRef) {
	_cgo_runtime_cgocall(_cgo_7047ef8e0352_Cfunc_copyFocusedAppName, uintptr(unsafe.Pointer(&r1)))
	if _Cgo_always_false {
	}
	return
}
//go:cgo_import_static _cgo_7047ef8e0352_Cfunc_copyFocusedWindowTitle
//go:linkname __cgofn__cgo_7047ef8e0352_Cfunc_copyFocusedWindowTitle _cgo_7047ef8e0352_Cfunc_copyFocusedWindowTitle
var __cgofn__cgo_7047ef8e0352_Cfunc_copyFocusedWindowTitle byte
var _cgo_7047ef8e0352_Cfunc_copyFocusedWindowTitle = unsafe.Pointer(&__cgofn__cgo_7047ef8e0352_Cfunc_copyFocusedWindowTitle)

//go:cgo_unsafe_args
func _Cfunc_copyFocusedWindowTitle() (r1 _Ctype_CFStringRef) {
	_cgo_runtime_cgocall(_cgo_7047ef8e0352_Cfunc_copyFocusedWindowTitle, uintptr(unsafe.Pointer(&r1)))
	if _Cgo_always_false {
	}
	return
}
//go:cgo_import_static _cgo_7047ef8e0352_Cfunc_currentRunLoop
//go:linkname __cgofn__cgo_7047ef8e0352_Cfunc_currentRunLoop _cgo_7047ef8e0352_Cfunc_currentRunLoop
var __cgofn__cgo_7047ef8e0352_Cfunc_currentRunLoop byte
var _cgo_7047ef8e0352_Cfunc_currentRunLoop = unsafe.Pointer(&__cgofn__cgo_7047ef8e0352_Cfunc_currentRunLoop)

//go:cgo_unsafe_args
func _Cfunc_currentRunLoop() (r1 _Ctype_CFRunLoopRef) {
	_cgo_runtime_cgocall(_cgo_7047ef8e0352_Cfunc_currentRunLoop, uintptr(unsafe.Pointer(&r1)))
	if _Cgo_always_false {
	}
	return
}
//go:cgo_import_static _cgo_7047ef8e0352_Cfunc_runCurrentRunLoop
//go:linkname __cgofn__cgo_7047ef8e0352_Cfunc_runCurrentRunLoop _cgo_7047ef8e0352_Cfunc_runCurrentRunLoop
var __cgofn__cgo_7047ef8e0352_Cfunc_runCurrentRunLoop byte
var _cgo_7047ef8e0352_Cfunc_runCurrentRunLoop = unsafe.Pointer(&__cgofn__cgo_7047ef8e0352_Cfunc_runCurrentRunLoop)

//go:cgo_unsafe_args
func _Cfunc_runCurrentRunLoop() (r1 _Ctype_void) {
	_cgo_runtime_cgocall(_cgo_7047ef8e0352_Cfunc_runCurrentRunLoop, uintptr(unsafe.Pointer(&r1)))
	if _Cgo_always_false {
	}
	return
}
//go:cgo_import_static _cgo_7047ef8e0352_Cfunc_startEventTap
//go:linkname __cgofn__cgo_7047ef8e0352_Cfunc_startEventTap _cgo_7047ef8e0352_Cfunc_startEventTap
var __cgofn__cgo_7047ef8e0352_Cfunc_startEventTap byte
var _cgo_7047ef8e0352_Cfunc_startEventTap = unsafe.Pointer(&__cgofn__cgo_7047ef8e0352_Cfunc_startEventTap)

//go:cgo_unsafe_args
func _Cfunc_startEventTap(p0 _Ctype_uintptr_t, p1 _Ctype_CGEventMask, p2 *_Ctype_CFMachPortRef) (r1 _Ctype_CFRunLoopSourceRef) {
	_cgo_runtime_cgocall(_cgo_7047ef8e0352_Cfunc_startEventTap, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
		_Cgo_use(p1)
		_Cgo_use(p2)
	}
	return
}
//go:cgo_import_static _cgo_7047ef8e0352_Cfunc_stopRunLoop
//go:linkname __cgofn__cgo_7047ef8e0352_Cfunc_stopRunLoop _cgo_7047ef8e0352_Cfunc_stopRunLoop
var __cgofn__cgo_7047ef8e0352_Cfunc_stopRunLoop byte
var _cgo_7047ef8e0352_Cfunc_stopRunLoop = unsafe.Pointer(&__cgofn__cgo_7047ef8e0352_Cfunc_stopRunLoop)

//go:cgo_unsafe_args
func _Cfunc_stopRunLoop(p0 _Ctype_CFRunLoopRef) (r1 _Ctype_void) {
	_cgo_runtime_cgocall(_cgo_7047ef8e0352_Cfunc_stopRunLoop, uintptr(unsafe.Pointer(&p0)))
	if _Cgo_always_false {
		_Cgo_use(p0)
	}
	return
}
//go:cgo_export_dynamic goHandleEvent
//go:linkname _cgoexp_7047ef8e0352_goHandleEvent _cgoexp_7047ef8e0352_goHandleEvent
//go:cgo_export_static _cgoexp_7047ef8e0352_goHandleEvent
func _cgoexp_7047ef8e0352_goHandleEvent(a *struct {
		p0 _Ctype_CGEventTapProxy
		p1 _Ctype_CGEventType
		p2 _Ctype_CGEventRef
		p3 unsafe.Pointer
		r0 _Ctype_CGEventRef
	}) {
	a.r0 = goHandleEvent(a.p0, a.p1, a.p2, a.p3)
	_cgoCheckResult(a.r0)
}
